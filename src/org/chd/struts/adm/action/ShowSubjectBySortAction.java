/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.adm.action;

import java.util.HashSet;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.entity.SubjectInfo;
import org.chd.struts.adm.form.ShowSubjectBySortForm;
import org.hibernate.Session;

/** 
 * MyEclipse Struts
 * Creation date: 10-16-2006
 * 
 * XDoclet definition:
 * @struts.action path="/ShowSubjectBySort" name="ShowSubjectBySortForm" input="/show_subject.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/showsubject_bysort.jsp" redirect="true"
 */
public class ShowSubjectBySortAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		ShowSubjectBySortForm ShowSubjectBySortForm = (ShowSubjectBySortForm) form;
		String sortname=ShowSubjectBySortForm.getSortname();	
		String pageforward=null;	
		Session session = HibernateSessionFactory.getSession();
		HashSet h=new HashSet();
		try
		{
			List subject_list = session.createCriteria(SubjectInfo.class).list();
			Iterator i1=subject_list.iterator();
		if(sortname.equals("teacherId"))
		{ 
			String teacherId=ShowSubjectBySortForm.getTeacherId();
			System.out.println(teacherId);
			while(i1.hasNext())
			{
				SubjectInfo subject=(SubjectInfo)i1.next();
				
				if(subject.getTeacherAId()!=null&&subject.getTeacherAId().equals(teacherId))
					h.add(subject);
				
			}
			pageforward="success";	
			request.setAttribute("SubjectSet", h);
				
		}
		if(sortname.equals("difficulty"))
		{
			String difficulty=ShowSubjectBySortForm.getDifficulty();
			while(i1.hasNext())
			{
				SubjectInfo subject=(SubjectInfo)i1.next();
				if(subject.getDifficulty()!=null&&subject.getDifficulty().equals(difficulty))
					h.add(subject);				
			}
			pageforward="success";		
			request.setAttribute("SubjectSet", h);
		}
		if(sortname.equals("fieldName"))
		{
			String fieldName=ShowSubjectBySortForm.getFieldName();
			while(i1.hasNext())
			{
				SubjectInfo subject=(SubjectInfo)i1.next();
				if(subject.getFieldName()!=null&&subject.getFieldName().equals(fieldName))
					h.add(subject);			
			}
			pageforward="success";
			request.setAttribute("SubjectSet", h);
		}
	}catch(Exception e)
	{
		e.printStackTrace();
		pageforward="failure";
	}
		return mapping.findForward(pageforward);
	}
}