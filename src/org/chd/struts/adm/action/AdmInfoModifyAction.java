/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.adm.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.MisConstants;
import org.chd.entity.AdminInfo;
import org.chd.struts.adm.form.AdmInfoModifyForm;
import org.hibernate.Session;
import org.hibernate.Transaction;

/** 
 * MyEclipse Struts
 * Creation date: 10-14-2006
 * 
 * XDoclet definition:
 * @struts.action path="/AdmInfoModify" name="AdmInfoModifyForm" input="/adm_pwd_modify.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/adm_main.jsp" redirect="true"
 * @struts.action-forward name="failure" path="/error.jsp" redirect="true"
 */
public class AdmInfoModifyAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AdmInfoModifyForm AdmInfoModifyForm = (AdmInfoModifyForm) form;
		AdminInfo admin=(AdminInfo)request.getSession().getAttribute(MisConstants.ADMININFO_KEY);
		String adminId=admin.getAdminId();	
		String oldPassword=AdmInfoModifyForm.getOldPassword();
		String newPassword=AdmInfoModifyForm.getNewPassword();
		String confirmPassword=AdmInfoModifyForm.getConfirmPassword();
		String pageforward="";
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		try
		{  
			tx=session.beginTransaction();
			AdminInfo adminInfo=(AdminInfo)session.get(AdminInfo.class, adminId);
			if(admin==null)
				pageforward="failure";
			else
			{	
				adminInfo.setAdminPassword(newPassword);
				session.saveOrUpdate(adminInfo);
				request.getSession().setAttribute(MisConstants.ADMININFO_KEY,adminInfo);
				pageforward="success";
			}						
			tx.commit();	  
		}
		catch(Exception e)
		{
		   e.printStackTrace();
		   pageforward="failure";
		}
		finally
		{
			session.close();
		}
		return mapping.findForward(pageforward);
	}
}