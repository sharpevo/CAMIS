/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.adm.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.MisConstants;
import org.chd.entity.StudentInfo;
import org.chd.struts.adm.form.StudentInfoModifyForm;
import org.hibernate.Session;
import org.hibernate.Transaction;

/** 
 * MyEclipse Struts
 * Creation date: 10-02-2006
 * 
 * XDoclet definition:
 * @struts.action path="/StudentInfoModify" name="StudentInfoModifyForm" input="/stu_info_show.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/stu_info_show.jsp" redirect="true"
 */
public class StudentInfoModifyAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StudentInfoModifyForm StudentInfoModifyForm = (StudentInfoModifyForm) form;
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		String pageforward="";
		try {
			tx=session.beginTransaction();
			StudentInfo student=new StudentInfo();
			student.setStudentId(StudentInfoModifyForm.getStudentId());
			student.setStudentName(new String(StudentInfoModifyForm.getStudentName().getBytes("ISO-8859-1"),"GBK"));
			student.setStudentPassword(StudentInfoModifyForm.getStudentPassword());
			student.setStudentSex(new String(StudentInfoModifyForm.getStudentSex().getBytes("ISO-8859-1"),"GBK"));
			student.setMajorName(new String(StudentInfoModifyForm.getMajorName().getBytes("ISO-8859-1"),"GBK"));
			student.setStudentEmail(StudentInfoModifyForm.getStudentEmail());
			student.setStudentPhone(StudentInfoModifyForm.getStudentPhone());
			student.setStudentClass(StudentInfoModifyForm.getStudentClass());
			request.setAttribute(MisConstants.STUDENTINFO_KEY, student);
			session.saveOrUpdate(student);
			tx.commit();
			pageforward="success";
		} catch (Exception e) {
			if(tx!=null) tx.rollback();
			e.printStackTrace();
			ActionErrors actionErrors=new ActionErrors();
			actionErrors.add(ActionErrors.GLOBAL_ERROR, new ActionError("errors.SQLError"));
			return new ActionForward(mapping.getInput());
		} finally {
			session.close();
		}
		return mapping.findForward(pageforward);
	}
}