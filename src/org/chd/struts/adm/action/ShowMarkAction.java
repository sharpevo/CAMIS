/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.adm.action;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.MisConstants;
import org.chd.entity.StudentInfo;
import org.chd.entity.SubjectInfo;
import org.chd.struts.adm.form.ShowMarkForm;
import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;

/**
 * MyEclipse Struts Creation date: 10-13-2006
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/ShowMark" name="ShowMarkForm" input="/query.jsp"
 *                scope="request" validate="true"
 * @struts.action-forward name="success" path="/mark_show.jsp" redirect="true"
 */
public class ShowMarkAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ShowMarkForm ShowMarkForm = (ShowMarkForm) form;
		String queryway = ShowMarkForm.getQueryway();
		String id = ShowMarkForm.getId();
		String pageforward = "";
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		try {
			if (queryway.equals("single")) {
				tx = session.beginTransaction();
				Criteria c1 = session.createCriteria(StudentInfo.class);
				c1.add(Restrictions.eq("studentId", id));
				StudentInfo student = (StudentInfo) c1.uniqueResult();
				Criteria c2 = session.createCriteria(SubjectInfo.class);
				c2.add(Restrictions.eq("studentId", id));
				SubjectInfo subject = (SubjectInfo) c2.uniqueResult();
				if (student == null || subject == null) {
					pageforward = "failure";
				} else {
					request.getSession().setAttribute(
							MisConstants.STUDENTINFO_KEY, student);
					request.getSession().setAttribute(
							MisConstants.SUBJETINFO_KEY, subject);
					pageforward = "markshow";
				}
				tx.commit();
			}
			if (queryway.equals("quantity")) {
				tx = session.beginTransaction();
				Criteria c1 = session.createCriteria(SubjectInfo.class);
				c1.add(Restrictions.like("studentId", id, MatchMode.START));
				List subjectlist = c1.list();
				if (subjectlist.size() <= 0) {
					pageforward = "failure";
				} else {
					Iterator i1 = subjectlist.iterator();
					HashMap studentNameMap = new HashMap();
					while (i1.hasNext()) {
						SubjectInfo subject = (SubjectInfo) i1.next();
						String studentId = subject.getStudentId();
						Query query = session
								.createQuery("select StudentInfo.studentName from StudentInfo where studentId=:id");
						String studentName = (String) query.uniqueResult();
						studentNameMap.put(studentId, studentName);
					}
					request.getSession().setAttribute(
							MisConstants.SUBJECTLIST_KEY, subjectlist);
					request.getSession().setAttribute("studentNameMap",
							studentNameMap);
					pageforward = "marksshow";
				}
				tx.commit();
			}
			if (queryway == null) {
				pageforward = "failure";
			}
		} catch (Exception e) {
			ActionErrors errors = new ActionErrors();
			errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
					"error.SQLError"));
			ActionForward returnActionForward = new ActionForward(mapping
					.getInput());
			return returnActionForward;
		} finally {
			session.close();
		}
		return mapping.findForward(pageforward);
	}
}