/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.adm.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.entity.TeacherInfo;
import org.chd.struts.adm.form.TeacherRegistrationForm;
import org.hibernate.Session;
import org.hibernate.Transaction;

/** 
 * MyEclipse Struts
 * Creation date: 09-25-2006
 * 
 * XDoclet definition:
 * @struts.action path="/TeacherRegistration" name="TeacherRegistrationForm" input="/teacherRegistration.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/show.jsp" redirect="true"
 */
public class TeacherRegistrationAction extends Action {
	/**
	 * Logger for this class
	 */
	private static final Logger logger = Logger
			.getLogger(TeacherRegistrationAction.class);

	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TeacherRegistrationForm TeacherRegistrationForm = (TeacherRegistrationForm) form;
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		String pageforward = "";
		try {
			tx = session.beginTransaction();
			TeacherInfo t = new TeacherInfo();
			t.setFieldName(TeacherRegistrationForm.getFieldName());
			t.setTeacherId(TeacherRegistrationForm.getTeacherId());
			t.setTeacherName(TeacherRegistrationForm.getTeacherName());
			t.setTeacherPassword(TeacherRegistrationForm.getTeacherPassword());
			t.setTeacherSex(TeacherRegistrationForm.getTeacherSex());
			t.setMajorName(TeacherRegistrationForm.getMajorName());
			t.setPost(TeacherRegistrationForm.getPost());
		    t.setTeacherPhone(TeacherRegistrationForm.getTeacherPhone());
		    t.setTeacherEmail(TeacherRegistrationForm.getTeacherEmail());
			session.save(t);
			tx.commit();
			pageforward = "success";
		} catch (Exception e) {
			e.printStackTrace();
			if (tx != null)
				tx.rollback();
			ActionErrors actionErrors = new ActionErrors();
			actionErrors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
					"errors.SQLError"));
			saveErrors(request,actionErrors);
			pageforward="failure";
		} finally {
			session.close();
		}
		ActionForward returnActionForward = mapping.findForward(pageforward);
		return returnActionForward;
	}
}