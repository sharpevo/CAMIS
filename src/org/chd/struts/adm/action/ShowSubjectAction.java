/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.adm.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.MisConstants;
import org.chd.struts.adm.form.ShowSubjectForm;
import org.hibernate.Session;
import org.hibernate.Transaction;

/** 
 * MyEclipse Struts
 * Creation date: 10-05-2006
 * 
 * XDoclet definition:
 * @struts.action path="/ShowSubject" name="ShowSubjectForm" scope="request" validate="true"
 * @struts.action-forward name="success" path="/show_subject.jsp" redirect="true"
 */
public class ShowSubjectAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ShowSubjectForm ShowSubjectForm = (ShowSubjectForm) form;
		int nowpage = Integer.parseInt(ShowSubjectForm.getNowPage());				
		String pageforward = "";
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		try {
			tx = session.beginTransaction();
			Integer rscount=(Integer)session.createQuery("select count(*) from SubjectInfo s").uniqueResult();
			int totalpage=0;
			if(rscount%MisConstants.PAGESIZE!=0)  totalpage=rscount.intValue()/(MisConstants.PAGESIZE)+1;
			else totalpage=rscount/MisConstants.PAGESIZE;
			if(nowpage<=0) nowpage=1;
			if(nowpage>=totalpage) nowpage=totalpage;
			int firstResult = (nowpage - 1) * MisConstants.PAGESIZE ;
			List subject_list=session.createQuery("from SubjectInfo").setFirstResult(firstResult).setMaxResults(MisConstants.PAGESIZE).list();	
			List field_list =session.createQuery("from FieldInfo").list();
			List teacher_list = session.createQuery("from TeacherInfo").list();		
			tx.commit();
			request.setAttribute(MisConstants.FIELDLIST_KEY, field_list);
			request.setAttribute(MisConstants.TEACHERLIST_KEY, teacher_list);
			request.setAttribute(MisConstants.SUBJECTLISTPAGING_KEY, subject_list);
			request.setAttribute(MisConstants.TOTALPAGE_KEY,totalpage);
			request.setAttribute(MisConstants.NOWPAGE_KEY, nowpage);
			pageforward = "success";
		} catch (Exception e) {
			e.printStackTrace();
			if (tx != null)
				tx.rollback();
			ActionErrors actionErrors = new ActionErrors();
			actionErrors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
					"errors.SQLError"));
			saveErrors(request,actionErrors);
		    pageforward="failure";
		} finally {
			session.close();
		}
		ActionForward ActionForward = mapping.findForward(pageforward);
		return ActionForward;
	}
}