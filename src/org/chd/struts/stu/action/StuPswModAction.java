/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.stu.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.MisConstants;
import org.chd.entity.StudentInfo;
import org.chd.struts.stu.form.StuPswModForm;
import org.hibernate.Session;
import org.hibernate.Transaction;

/** 
 * MyEclipse Struts
 * Creation date: 10-20-2006
 * 
 * XDoclet definition:
 * @struts.action path="/stu/StuPswMod" name="StuPswModForm" scope="request" validate="true"
 * @struts.action-forward name="success" path="/stu/stu_info.jsp" redirect="true"
 */
public class StuPswModAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StuPswModForm StuPswModForm = (StuPswModForm) form;
		StudentInfo studentInfo=(StudentInfo)request.getSession().getAttribute(MisConstants.STUDENTINFO_KEY);
		String studentId=studentInfo.getStudentId();
		String oldPassword=StuPswModForm.getOldPsw();
		String newPassword=StuPswModForm.getNewPsw();
		String confirmPassword=StuPswModForm.getConfirmPsw();
		String pageforward="";
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		try
		{  
			tx=session.beginTransaction();
			StudentInfo student=(StudentInfo)session.get(StudentInfo.class, studentId);
			if(student==null)
				pageforward="failure";
			else
			{			
				student.setStudentPassword(newPassword);
				session.save(student);
				pageforward="success";
			}						
			tx.commit();	
			request.getSession().setAttribute(MisConstants.STUDENTINFO_KEY, student);
		}
		catch(Exception e)
		{
		   e.printStackTrace();
		   pageforward="failure";
		}
		finally
		{
			session.close();
		}
		return mapping.findForward(pageforward);
	}
}