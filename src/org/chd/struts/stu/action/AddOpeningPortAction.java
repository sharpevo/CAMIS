/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.chd.struts.stu.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.chd.HibernateSessionFactory;
import org.chd.MisConstants;
import org.chd.entity.OpeningReport;
import org.chd.entity.StudentInfo;
import org.chd.struts.stu.form.AddOpeningPortForm;
import org.hibernate.Session;
import org.hibernate.Transaction;

/** 
 * MyEclipse Struts
 * Creation date: 10-19-2006
 * 
 * XDoclet definition:
 * @struts.action path="/stu/AddOpeningPort" name="AddOpeningPortForm" input="/stu/opening_report.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/stu/opening_report.jsp" redirect="true"
 */
public class AddOpeningPortAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StudentInfo student=(StudentInfo)request.getSession().getAttribute(MisConstants.STUDENTINFO_KEY);
		AddOpeningPortForm AddOpeningPortForm = (AddOpeningPortForm) form;
		
		java.sql.Date date=new java.sql.Date(new java.util.Date().getTime());	
		String pageforward = "";
		Session session = HibernateSessionFactory.getSession();
		Transaction tx = null;
		try {
			 String content=new String(AddOpeningPortForm.getContent().getBytes("ISO-8859-1"),"GBK");		 
			 tx = session.beginTransaction();
			 OpeningReport openingReport=new OpeningReport();
			 openingReport.setStudentId(student.getStudentId());
			 openingReport.setContent(content);
			 openingReport.setAddDate(date);
			 session.save(openingReport);
			 tx.commit();
			 pageforward = "success";
		} catch (Exception e) {
			if (tx != null)
				e.printStackTrace();
				tx.rollback();
			ActionErrors actionErrors = new ActionErrors();
			actionErrors.add(ActionErrors.GLOBAL_ERROR, new ActionError(
					"errors.SQLError"));
			pageforward="failure";
		} finally {
			session.close();
		}
		ActionForward returnActionForward = mapping.findForward(pageforward);
		return returnActionForward;
	}
}